/*
Skycons is a set of ten animated weather glyphs, procedurally generated by JavaScript using the HTML5 canvas tag.
http://darkskyapp.github.io/skycons/
*/
var skycons = new Skycons();

  // you can add a icon to a html canvas. simply supply its element id and the weather you want to show.

  skycons.add("day1", Skycons.CLEAR_DAY);
  skycons.add("day2", Skycons.CLOUDY);
  skycons.add("day3", Skycons.RAIN);

  // start all icons animation!
  skycons.play();

  // update a icon on  canvas by its id



/*
Get value from Bootstrap dropdown menu
*/
function GetUrlSucess(url){
  $.getJSON(url,function(data){
     if(data.query.results){
       return(data);
     }
     else {
       GetUrlSucess(url);
     }
  })
};
/*
顯示台北市溫度
*/
function getUrl(city){
  var url ='https://query.yahooapis.com/v1/public/yql?q=select%20*%20from%20weather.forecast%20where%20woeid%20in%20(select%20woeid%20from%20geo.places(1)%20where%20text%3D%22'+city+'%22)&format=json&env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys'
  return url
};
console.log(getUrl('台北市'));

GetUrlSucess(getUrl('台北市'))

EndPointUrl(getUrl('台北市'));

function EndPointUrl(endurl){
$.getJSON(endurl,
  function(data){
  var currentTemperature = data.query.results.channel.item.condition.temp  ;

  var currentTemperatureCel = Math.round((currentTemperature-32)*5/9);
  $(".temperature").text(currentTemperatureCel);

  var currentState = data.query.results.channel.item.condition.code;
  switch (parseInt(currentState)) {
    case 11:
    case 12:
      skycons.set("today",Skycons.RAIN);
      break;
    case 31:
    case 33:
      skycons.set("today",Skycons.CLEAR_NIGHT);
      break;
    case 30:
    case 28:
      skycons.set("today",Skycons.PARTLY_CLOUDY_DAY);
      break;
    case 29:
    case 27:
      skycons.set("today",Skycons.PARTLY_CLOUDY_NIGHT);
      break;
    case 26:
      skycons.set("today",Skycons.CLOUDY);
      break;
    case 24:
    case 23:
      skycons.set("today",Skycons.WIND );
      break;
    case 20:
    case 21:
    case 22:
      skycons.set("today",Skycons.FOG);
      break;
    case 32:
    case 34:
    case 36:
      skycons.set("today",Skycons.CLEAR_DAY);
      break;
    default:
    skycons.set("today",Skycons.CLEAR_DAY);

    break;
  }
  var currentStateText = data.query.results.channel.item.condition.text;
  $('#stateText').text(currentStateText);
  console.log(currentStateText);
  var NowDate = data.query.results.channel.item.forecast[0].date;
  $('.date').text(NowDate);
  console.log(NowDate);
  var Day1 = data.query.results.channel.item.forecast[1].date;
  $('#forecastDay1').text(Day1);
  var Day2 = data.query.results.channel.item.forecast[2].date;
  $('#forecastDay2').text(Day2);
  var Day3 = data.query.results.channel.item.forecast[3].date;
  $('#forecastDay3').text(Day3);

  var Day1Low = data.query.results.channel.item.forecast[1].low;
  $('#foreLow1').text(Math.round((Day1Low-32)*5/9));
  var Day1High = data.query.results.channel.item.forecast[1].high;
  $('#foreHigh1').text(Math.round((Day1High-32)*5/9));
  var Day2Low = data.query.results.channel.item.forecast[2].low;
  $('#foreLow2').text(Math.round((Day2Low-32)*5/9));
  var Day2High = data.query.results.channel.item.forecast[2].high;
  $('#foreHigh2').text(Math.round((Day2High-32)*5/9));
  var Day3Low = data.query.results.channel.item.forecast[3].low;
  $('#foreLow3').text(Math.round((Day3Low-32)*5/9));
  var Day3High = data.query.results.channel.item.forecast[3].high;
  $('#foreHigh3').text(Math.round((Day3High-32)*5/9));

  var forecastCode1=data.query.results.channel.item.forecast[1].code;
  var forecastCode2=data.query.results.channel.item.forecast[2].code;
  var forecastCode3=data.query.results.channel.item.forecast[3].code;

skycons.set("day1",getforecastIcon (forecastCode1));
skycons.set("day2",getforecastIcon (forecastCode2));
skycons.set("day3",getforecastIcon (forecastCode3));
function getforecastIcon (forecastCode){
  switch (parseInt(forecastCode)) {
    case 11:
    case 12:
      return Skycons.RAIN;
    case 31:
    case 33:
      return Skycons.CLEAR_NIGHT
      break;
    case 30:
    case 28:
      return Skycons.PARTLY_CLOUDY_DAY
      break;
    case 29:
    case 27:
      return Skycons.PARTLY_CLOUDY_NIGHT
      break;
    case 26:
      return Skycons.CLOUDY
      break;
    case 24:
    case 23:
      return Skycons.WIND
      break;
    case 20:
    case 21:
    case 22:
      return Skycons.FOG
      break;
    case 32:
    case 34:
    case 36:
      return Skycons.CLEAR_DAY
      break;
    default:
    return Skycons.CLEAR_DAY
    break;
  }
}


});
}


/*function getTemp(endurl){
  $.getJSON(endurl,function(data){
    var currentTemperature = data.query.results.channel.item.condition.temp  ;
    var currentTemperatureCel = Math.round((currentTemperature-32)*5/9);
    $('#dropdown li a').append(currentTemperatureCel+" ℃");

  })

};*/

$('#dropdown li a').each(function () {
      var vm = this;
      var cityName = $(this).text();
      console.log(cityName);
    $.getJSON(getUrl(cityName),function(data){
      var currentTemperature = data.query.results.channel.item.condition.temp  ;
      var currentTemperatureCel = Math.round((currentTemperature-32)*5/9);
      console.log(this);
      vm.append(currentTemperatureCel + "℃");

    })


  });


/*
顯示台北市天氣概況
*/


$('#dropdown li').on('click', function(){
  var cityName = $(this).text();
  $('#city').text(cityName);
  GetUrlSucess(getUrl(cityName));
  EndPointUrl(getUrl(cityName));
  console.log(getUrl(cityName));
});
